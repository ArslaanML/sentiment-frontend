{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[text,setText]=useState(\"\");const[result,setResult]=useState(null);const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{const res=await fetch(\"https://arslaanml-sentiment-space.hf.space/run/predict_sentiment\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({data:[text]})});const response=await res.json();const[sentiment,confidence]=response.data;setResult({sentiment,confidence:`${confidence}%`});}catch(err){console.error(\"Error fetching prediction:\",err);setResult({sentiment:\"Error\",confidence:\"N/A\"});}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sentiment Analysis\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"4\",cols:\"50\",value:text,onChange:e=>setText(e.target.value),placeholder:\"Enter your text here...\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!text.trim(),children:loading?\"Analyzing...\":\"Analyze\"})]}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Result\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sentiment:\"}),\" \",result.sentiment]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Confidence:\"}),\" \",result.confidence]})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","text","setText","result","setResult","loading","setLoading","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","response","json","sentiment","confidence","err","console","error","className","children","onSubmit","rows","cols","value","onChange","target","placeholder","type","disabled","trim"],"sources":["C:/Users/thele/Desktop/FRONTEND/react-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await fetch(\n        \"https://arslaanml-sentiment-space.hf.space/run/predict_sentiment\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ data: [text] }),\n        }\n      );\n\n      const response = await res.json();\n\n      const [sentiment, confidence] = response.data;\n\n      setResult({\n        sentiment,\n        confidence: `${confidence}%`,\n      });\n    } catch (err) {\n      console.error(\"Error fetching prediction:\", err);\n      setResult({ sentiment: \"Error\", confidence: \"N/A\" });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Sentiment Analysis</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter your text here...\"\n        />\n        <br />\n        <button type=\"submit\" disabled={loading || !text.trim()}>\n          {loading ? \"Analyzing...\" : \"Analyze\"}\n        </button>\n      </form>\n      {result && (\n        <div className=\"result\">\n          <h2>Result</h2>\n          <p>\n            <strong>Sentiment:</strong> {result.sentiment}\n          </p>\n          <p>\n            <strong>Confidence:</strong> {result.confidence}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACQ,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAY,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAC,KAAK,CACrB,kEAAkE,CAClE,CACEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,IAAI,CAAE,CAAChB,IAAI,CAAE,CAAC,CACvC,CACF,CAAC,CAED,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAEjC,KAAM,CAACC,SAAS,CAAEC,UAAU,CAAC,CAAGH,QAAQ,CAACD,IAAI,CAE7Cb,SAAS,CAAC,CACRgB,SAAS,CACTC,UAAU,CAAE,GAAGA,UAAU,GAC3B,CAAC,CAAC,CACJ,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEF,GAAG,CAAC,CAChDlB,SAAS,CAAC,CAAEgB,SAAS,CAAE,OAAO,CAAEC,UAAU,CAAE,KAAM,CAAC,CAAC,CACtD,CAAC,OAAS,CACRf,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,KAAA,QAAK0B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB7B,IAAA,OAAA6B,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B3B,KAAA,SAAM4B,QAAQ,CAAEpB,YAAa,CAAAmB,QAAA,eAC3B7B,IAAA,aACE+B,IAAI,CAAC,GAAG,CACRC,IAAI,CAAC,IAAI,CACTC,KAAK,CAAE7B,IAAK,CACZ8B,QAAQ,CAAGvB,CAAC,EAAKN,OAAO,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE,CACzCG,WAAW,CAAC,yBAAyB,CACtC,CAAC,cACFpC,IAAA,QAAK,CAAC,cACNA,IAAA,WAAQqC,IAAI,CAAC,QAAQ,CAACC,QAAQ,CAAE9B,OAAO,EAAI,CAACJ,IAAI,CAACmC,IAAI,CAAC,CAAE,CAAAV,QAAA,CACrDrB,OAAO,CAAG,cAAc,CAAG,SAAS,CAC/B,CAAC,EACL,CAAC,CACNF,MAAM,eACLJ,KAAA,QAAK0B,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrB7B,IAAA,OAAA6B,QAAA,CAAI,QAAM,CAAI,CAAC,cACf3B,KAAA,MAAA2B,QAAA,eACE7B,IAAA,WAAA6B,QAAA,CAAQ,YAAU,CAAQ,CAAC,IAAC,CAACvB,MAAM,CAACiB,SAAS,EAC5C,CAAC,cACJrB,KAAA,MAAA2B,QAAA,eACE7B,IAAA,WAAA6B,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAACvB,MAAM,CAACkB,UAAU,EAC9C,CAAC,EACD,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAArB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}