{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[text,setText]=useState(\"\");const[result,setResult]=useState(null);const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{const res=await fetch(\"https://arslaanml-sentiment-space.hf.space/api/predict/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({data:[text]})});const data=await res.json();setResult({sentiment:data.data[0],confidence:data.data[1]||\"N/A\"// Only if you're returning confidence\n});}catch(err){console.error(\"Error fetching prediction:\",err);setResult({sentiment:\"Error\",confidence:\"N/A\"});}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sentiment Analysis\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"4\",cols:\"50\",value:text,onChange:e=>setText(e.target.value),placeholder:\"Enter your text here...\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Analyze\"})]}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Analyzing...\"}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Result\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sentiment:\"}),\" \",result.sentiment]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Confidence:\"}),\" \",result.confidence]})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","text","setText","result","setResult","loading","setLoading","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","sentiment","confidence","err","console","error","className","children","onSubmit","rows","cols","value","onChange","target","placeholder","type"],"sources":["C:/Users/thele/Desktop/FRONTEND/react-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await fetch(\"https://arslaanml-sentiment-space.hf.space/api/predict/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ data: [text] }),\n      });\n\n      const data = await res.json();\n      setResult({\n        sentiment: data.data[0],\n        confidence: data.data[1] || \"N/A\", // Only if you're returning confidence\n      });\n    } catch (err) {\n      console.error(\"Error fetching prediction:\", err);\n      setResult({ sentiment: \"Error\", confidence: \"N/A\" });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Sentiment Analysis</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter your text here...\"\n        />\n        <br />\n        <button type=\"submit\">Analyze</button>\n      </form>\n      {loading && <p>Analyzing...</p>}\n      {result && (\n        <div className=\"result\">\n          <h2>Result</h2>\n          <p><strong>Sentiment:</strong> {result.sentiment}</p>\n          <p><strong>Confidence:</strong> {result.confidence}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACQ,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAY,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,yDAAyD,CAAE,CACjFC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,IAAI,CAAE,CAAChB,IAAI,CAAE,CAAC,CACvC,CAAC,CAAC,CAEF,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAC7Bd,SAAS,CAAC,CACRe,SAAS,CAAEF,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CACvBG,UAAU,CAAEH,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,EAAI,KAAO;AACrC,CAAC,CAAC,CACJ,CAAE,MAAOI,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEF,GAAG,CAAC,CAChDjB,SAAS,CAAC,CAAEe,SAAS,CAAE,OAAO,CAAEC,UAAU,CAAE,KAAM,CAAC,CAAC,CACtD,CAAC,OAAS,CACRd,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,KAAA,QAAKyB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB5B,IAAA,OAAA4B,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B1B,KAAA,SAAM2B,QAAQ,CAAEnB,YAAa,CAAAkB,QAAA,eAC3B5B,IAAA,aACE8B,IAAI,CAAC,GAAG,CACRC,IAAI,CAAC,IAAI,CACTC,KAAK,CAAE5B,IAAK,CACZ6B,QAAQ,CAAGtB,CAAC,EAAKN,OAAO,CAACM,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE,CACzCG,WAAW,CAAC,yBAAyB,CACtC,CAAC,cACFnC,IAAA,QAAK,CAAC,cACNA,IAAA,WAAQoC,IAAI,CAAC,QAAQ,CAAAR,QAAA,CAAC,SAAO,CAAQ,CAAC,EAClC,CAAC,CACNpB,OAAO,eAAIR,IAAA,MAAA4B,QAAA,CAAG,cAAY,CAAG,CAAC,CAC9BtB,MAAM,eACLJ,KAAA,QAAKyB,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrB5B,IAAA,OAAA4B,QAAA,CAAI,QAAM,CAAI,CAAC,cACf1B,KAAA,MAAA0B,QAAA,eAAG5B,IAAA,WAAA4B,QAAA,CAAQ,YAAU,CAAQ,CAAC,IAAC,CAACtB,MAAM,CAACgB,SAAS,EAAI,CAAC,cACrDpB,KAAA,MAAA0B,QAAA,eAAG5B,IAAA,WAAA4B,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAACtB,MAAM,CAACiB,UAAU,EAAI,CAAC,EACpD,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAApB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}